name: Bitergia Analytics release

on:
  workflow_dispatch:
    inputs:
      release_candidate:
        description: "Create a release candidate version"
        required: true
        type: boolean
        default: false
      git_email:
        description: "Git email for commits messages"
        required: true
        default: "evamillan@bitergia.com"
      git_name:
        description: "Git name for commits messages"
        required: true
        default: "Eva MillÃ¡n"

jobs:
  variables-job:
    name: Set variables
    runs-on: ubuntu-latest
    outputs:
      git_email: ${{ steps.variables.outputs.git_email }}
      git_name: ${{ steps.variables.outputs.git_name }}
      release_candidate: ${{ steps.variables.outputs.release_candidate }}
    steps:
      - id: variables
        name: variables
        run: |
          echo "git_email=${{ inputs.git_email }}" >> $GITHUB_OUTPUT
          echo "git_name=${{ inputs.git_name}}" >> $GITHUB_OUTPUT
          echo "release_candidate=${{ inputs.release_candidate}}" >> $GITHUB_OUTPUT

  setup:
    name: Get version from repository
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repository: [
          bitergia-analytics-opensearch,
          bitergia-analytics-opensearch-dashboards,
          bitergia-analytics-plugin
        ]
    outputs:
      bitergia-analytics-opensearch: ${{ steps.semverup.outputs.bitergia-analytics-opensearch }}
      bitergia-analytics-opensearch-dashboards: ${{ steps.semverup.outputs.bitergia-analytics-opensearch-dashboards }}
      bitergia-analytics-plugin: ${{ steps.semverup.outputs.bitergia-analytics-plugin }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          repository: evamillan/${{ matrix.repository }}
          path: ${{ matrix.repository }}
          token: '${{ secrets.ACCESS_TOKEN }}'
          fetch-depth: 0
          ref: release-workflow

      - name: Install release-tools
        run: pip install git+https://github.com/evamillan/release-tools.git#egg=release-tools
      
      - id: old-version
        name: Get old version
        run: |
          if [ "${{ matrix.repository }}" == "bitergia-analytics-plugin" ]
          then
            version=$(jq '.version' package.json)
          else
            version=$(<version)
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
        working-directory: ${{ matrix.repository }}

      - id: semverup
        name: Get version number
        continue-on-error: true
        shell: bash {0}
        run: |
          if [ ${{ inputs.release_candidate }} == 'true' ]
          then
            rcArg='--pre-release'
          else
            rcArg=''
          fi
          old_version=${{ steps.old-version.outputs.version }}

          version=$(semverup --dry-run --current-version $old_version $rcArg)
          if [ -z $version ] && [ ${{ inputs.release_candidate }} != 'true' ] && [[ "$old_version" =~ .*rc.* ]]
          then
            echo "Create final version from rc"
            version=$(semverup --bump-version patch)
            echo "forced_version=true" >> $GITHUB_OUTPUT
          else
            echo "forced_version=false" >> $GITHUB_OUTPUT
          fi
          echo $version
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "::set-output name=${{ matrix.repository }}::$version"
          if [ -z $version ]; then exit 1; fi
        working-directory: ${{ matrix.repository }}
   
  semverup:
    name: Update version number
    runs-on: ubuntu-latest
    needs:
      - setup
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
    steps:
      - name: Choose version number
        id: version
        run: |
          versions=(${{ needs.setup.outputs.bitergia-analytics-plugin }} ${{ needs.setup.outputs.bitergia-analytics-opensearch }} ${{ needs.setup.outputs.bitergia-analytics-opensearch-dashboards }})
          IFS=$'\n' new_version=($(sort -r -V <<<"${versions[*]}" | head -n1)); unset IFS
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          echo $new_version

  bitergia-analytics-plugin:
    name: Bitergia Analytics Plugin
    needs:
      - variables-job
      - semverup
    uses: ./.github/workflows/release-bap-component.yml
    with:
      version: ${{ needs.semverup.outputs.new_version }}
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'bitergia-analytics-plugin'
      module_repository: 'evamillan/bitergia-analytics-plugin'
      module_directory: 'bitergia-analytics-plugin'
      forced_version: ${{ !needs.setup.output.bitergia-analytics-plugin }}
    secrets:
      access_token: ${{ secrets.ACCESS_TOKEN }}

  bitergia-analytics-opensearch-dashboards:
    name: Release Bitergia Analytics OpenSearch Dashboards
    needs:
      - variables-job
      - semverup
      - bitergia-analytics-plugin
    uses: ./.github/workflows/release-bap-component.yml
    with:
      version: ${{ needs.semverup.outputs.new_version }}
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'bitergia-analytics-opensearch-dashboards'
      module_repository: 'evamillan/bitergia-analytics-opensearch-dashboards'
      module_directory: 'bitergia-analytics-opensearch-dashboards'
      forced_version: ${{ !needs.setup.output.bitergia-analytics-opensearch-dashboards }}
      plugin_url: ${{ needs.bitergia-analytics-plugin.outputs.plugin_url }}
    secrets:
      access_token: ${{ secrets.ACCESS_TOKEN }}
    
  bitergia-analytics-opensearch:
    name: Release Bitergia Analytics OpenSearch
    needs:
      - variables-job
      - semverup
    uses: ./.github/workflows/release-bap-component.yml
    with:
      version: ${{ needs.semverup.outputs.new_version }}
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'bitergia-analytics-opensearch'
      module_repository: 'evamillan/bitergia-analytics-opensearch'
      module_directory: 'bitergia-analytics-opensearch'
      forced_version: ${{ !needs.setup.output.bitergia-analytics-opensearch }}
    secrets:
      access_token: ${{ secrets.ACCESS_TOKEN }}
    # steps:
    #   - name: Checkout source code
    #     uses: actions/checkout@v4
    #     with:
    #       repository: evamillan/bitergia-analytics-opensearch-dashboards
    #       path: bitergia-analytics-opensearch-dashboards
    #       token: '${{ secrets.ACCESS_TOKEN }}'
    #       fetch-depth: 0
    #       ref: release-workflow
      
    #   - name: Set up Git config
    #     run: |
    #       git config --global user.email "${{ inputs.git_email }}"
    #       git config --global user.name "${{ inputs.git_name }}"

    #   - name: Install release-tools
    #     run: pip install git+https://github.com/evamillan/release-tools.git#egg=release-tools

    #   - id: version
    #     name: Update version
    #     shell: bash
    #     run: |
    #       new_version=${{ steps.semverup.outputs.version }}
    #       echo $new_version > version
    #     working-directory: bitergia-analytics-opensearch-dashboards
      
    #   - name: Update plugin URL in Dockerfile
    #     id: dockerfile
    #     shell: bash
    #     run: |
    #       url='${{ needs.bitergia-analytics-plugin.outputs.plugin_url }}'
    #       line="RUN opensearch-dashboards-plugin install $url"
    #       sed -i "/bitergia-analytics-plugin/s|.*|$line|" Dockerfile
    #     working-directory: bitergia-analytics-opensearch-dashboards
      
    #   - id: notes
    #     name: Generate release notes
    #     run: |
    #       version=${{ needs.semverup.outputs.new_version }}
    #       eof="EOF$(date +%s)"
    #       release_file="releases/$version.md"
    #       if [ ${{ inputs.release_candidate }} == 'true' ]
    #       then
    #         newsArg=''
    #         rcArg='--pre-release'
    #       else
    #         newsArg='--news'
    #         rcArg=''
    #       fi
          
    #       notes "Bitergia Analytics OpenSearch Dashboards" $version $newsArg --authors $rcArg

    #       # Save release notes in 'notes' output
    #       echo 'notes<<$eof' >> $GITHUB_OUTPUT
    #       cat $release_file >> $GITHUB_OUTPUT
    #       echo '$eof' >> $GITHUB_OUTPUT
    #     working-directory: bitergia-analytics-opensearch-dashboards
      
    #   - id: current_time
    #     name: Store current time to get the release workflow
    #     run: |
    #       datetime=$(date +"%Y-%m-%dT%H:%M:%S%z")
    #       echo "datetime=$datetime" >> $GITHUB_OUTPUT
    #       echo $datetime

    #   - id: publish
    #     name: Publish new version.
    #     run: |
    #       if [ ${{ inputs.release_candidate }} == 'true' ]
    #       then
    #         publish ${{ needs.semverup.outputs.new_version }} "${{ inputs.git_name }} <${{ inputs.git_email }}>" --push origin --no-cleanup --add-all
    #       else
    #         publish ${{ needs.semverup.outputs.new_version }} "${{ inputs.git_name }} <${{ inputs.git_email }}>" --push origin --add-all --remote-branch="release-workflow"
    #       fi
    #     working-directory: bitergia-analytics-opensearch-dashboards
      
    #   - id: wait-for-release
    #     name: Wait for release to finish.
    #     continue-on-error: true
    #     run: |
    #       url="https://api.github.com/repos/evamillan/bitergia-analytics-opensearch-dashboards/actions/workflows/release.yml/runs?created=>${{ steps.current_time.outputs.datetime }}"
    #       while true
    #       do
    #         workflows=$(curl -sS -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" $url)
    #         if [ $(echo $workflows | jq '.total_count') -eq 0 ]
    #         then
    #           echo "Release workflow did not start"
    #           sleep 60
    #           continue
    #         fi

    #         release_conclusion=$(echo $workflows | jq '.workflow_runs[0].conclusion')
    #         release_status=$(echo $workflows | jq '.workflow_runs[0].status')
    #         if [ $release_status = \"completed\" -a $release_conclusion = \"success\" ]
    #         then
    #           echo "Release completed!";
    #           break;
    #         elif [ $release_status = \"completed\" -a $release_conclusion != \"success\" ]
    #         then
    #           echo "Release failed!";
    #           exit 1;
    #         else
    #           echo $release_conclusion $release_status
    #           echo "Waiting for release..."
    #           sleep 60
    #         fi
    #       done
      
    #   - id: rollback
    #     name: Rollback last commits and remove tag
    #     if: steps.wait-for-release.outcome == 'failure'
    #     run: |
    #       git reset --hard HEAD~1
    #       git push -f origin release-workflow
    #       git tag -d ${{ needs.semverup.outputs.new_version }}
    #       git push --delete origin ${{ needs.semverup.outputs.new_version }}

    #       # Force to fail
    #       exit 1
    #     working-directory: bitergia-analytics-plugin

  # bitergia-analytics-plugin:
  #   name: Bitergia Analytics Plugin
  #   runs-on: ubuntu-latest
  #   needs:
  #     - variables-job
  #   outputs:
  #     version: ${{ steps.semverup.outputs.new_tag }}
  #     plugin_url: ${{ steps.assets.outputs.plugin_url }}
  #   steps:
  #     - name: Checkout plugin source code
  #       uses: actions/checkout@v4
  #       with:
  #         repository: evamillan/test-gh-actions
  #         path: test-gh-actions
  #         token: '${{ secrets.ACCESS_TOKEN }}'
  #         fetch-depth: 0
  #         fetch-tags: true

  #     - name: Get new version number
  #       id: semverup
  #       uses: anothrNick/github-tag-action@1.36.0
  #       continue-on-error: true
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  #         DRY_RUN: true
  #         SOURCE: test-gh-actions
  #         INITIAL_VERSION: 0.4.0
  #         DEFAULT_BRANCH: main
  #         PRERELEASE: ${{ steps.variables.outputs.release_candidate }}
  #         PRERELEASE_SUFFIX: rc
      
  #     - id: notes
  #       name: Generate release notes.
  #       if: steps.semverup.outcome == 'success'
  #       run: |
  #         version=${{ steps.semverup.outputs.version }}
  #         eof="EOF$(date +%s)"
  #         release_file="releases/$version.md"
  #         if [ ${{ inputs.release_candidate }} == 'true' ]
  #         then
  #           newsArg=''
  #           rcArg='--pre-release'
  #         else
  #           newsArg='--news'
  #           rcArg=''
  #         fi

  #         if [ ${{ steps.semverup.outputs.forced_version }} != 'true' ]
  #         then
  #           notes "Bitergia Analytics OpenSearch Dashboards" $version $newsArg --authors $rcArg
  #         else
  #           today=$(date -u "+%Y-%m-%d")
  #           cat << EOF > $release_file
  #           ## Bitergia Analytics OpenSearch Dashboards $version - ($today)
  #         EOF
  #           # Update NEWS file if it is not a release candidate
  #           if [ ${{ inputs.release_candidate }} != 'true' ]
  #           then
  #             mv NEWS old_NEWS
  #             echo -e "# Releases\n" >> NEWS
  #             cat $release_file >> NEWS
  #             cat old_NEWS | tail -n +2 >> NEWS
  #           fi
  #         fi

  #         # Save release notes in 'notes' output
  #         echo 'notes<<$eof' >> $GITHUB_OUTPUT
  #         cat $release_file >> $GITHUB_OUTPUT
  #         echo '$eof' >> $GITHUB_OUTPUT
  #       working-directory: bitergia-analytics-opensearch-dashboards

      # - name: Update version in json files
      #   if: steps.semverup.outcome == 'success'
      #   shell: bash
      #   run: |
      #     package_contents="$(jq '.version = "${{ steps.semverup.outputs.new_tag }}"' package.json)" && \
      #     echo -E "${package_contents}" > package.json
      #     osd_contents="$(jq '.version = "${{ steps.semverup.outputs.new_tag }}"' opensearch_dashboards.json)" && \
      #     echo -E "${osd_contents}" > opensearch_dashboards.json
      #   working-directory: test-gh-actions

      # - id: tag
      #   name: Commit and tag
      #   if: steps.semverup.outcome == 'success'
      #   run: |
      #     git config user.name ${{ inputs.git_name }}
      #     git config user.email ${{ inputs.git_email }}
      #     git add .
      #     git commit -m "Release ${{ steps.semverup.outputs.new_tag }}"
      #     git push
      #     git tag ${{ steps.semverup.outputs.new_tag }}
      #     git push origin ${{ steps.semverup.outputs.new_tag }}
      #   working-directory: test-gh-actions
      
      # - id: current_time
      #   name: Store current time to get the release workflow
      #   if: steps.semverup.outcome == 'success'
      #   run: |
      #     datetime=$(date +"%Y-%m-%dT%H:%M:%S%z")
      #     echo "datetime=$datetime" >> $GITHUB_OUTPUT
      #     echo $datetime

      # - id: wait-for-release
      #   name: Wait for release to finish.
      #   continue-on-error: true
      #   if: steps.tag.outcome == 'success'
      #   run: |
      #     url="https://api.github.com/repos/evamillan/test-gh-actions/actions/workflows/release.yml/runs?created=>${{ steps.current_time.outputs.datetime }}"
      #     while true
      #     do
      #       workflows=$(curl -sS -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" $url)
      #       if [ $(echo $workflows | jq '.total_count') -eq 0 ]
      #       then
      #         echo "Release workflow did not start"
      #         sleep 60
      #         continue
      #       fi

      #       release_conclusion=$(echo $workflows | jq '.workflow_runs[0].conclusion')
      #       release_status=$(echo $workflows | jq '.workflow_runs[0].status')
      #       if [ $release_status = \"completed\" -a $release_conclusion = \"success\" ]
      #       then
      #         echo "Release completed!";
      #         break;
      #       elif [ $release_status = \"completed\" -a $release_conclusion != \"success\" ]
      #       then
      #         echo "Release failed!";
      #         exit 1;
      #       else
      #         echo $release_conclusion $release_status
      #         echo "Waiting for release..."
      #         sleep 60
      #       fi
      #     done
      
  #     - id: assets
  #       name: Get plugin installable URL
  #       shell: bash
  #       # if: steps.wait-for-release.outcome == 'success'
  #       run: |
  #         url="https://api.github.com/repos/evamillan/bitergia-analytics-plugin/releases/tags/${{ steps.semverup.outputs.new_tag }}"
  #         assets=$(curl -sS -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" $url)
  #         plugin_url=$(echo $assets | jq '.assets[0].browser_download_url')
  #         echo "plugin_url=$plugin_url" >> $GITHUB_OUTPUT
  
  # bitergia-analytics-opensearch-dashboards:
  #   name: Bitergia Analytics OpenSearch Dashboards
  #   needs:
  #     - variables-job
  #     - bitergia-analytics-plugin
  #   runs-on: ubuntu-latest
  #   outputs:
  #     version: ${{ steps.semverup.outputs.version }}
  #     notes: ${{ steps.notes.outputs.notes }}
  #   steps:
  #     - name: Checkout plugin source code
  #       uses: actions/checkout@v4
  #       with:
  #         repository: evamillan/test-gh-actions
  #         path: bitergia-analytics-opensearch-dashboards
  #         token: '${{ secrets.ACCESS_TOKEN }}'
  #         fetch-depth: 0
  #         fetch-tags: true

  #     - name: Install poetry
  #       run: |
  #         curl -sSL https://install.python-poetry.org | python3 -
  #         echo "PATH=$HOME/.poetry/bin:$PATH" >> $GITHUB_ENV
  #       shell: bash

  #     - name: Install release-tools
  #       run: pip install git+https://github.com/evamillan/release-tools.git#egg=release-tools

  #     - id: old-version
  #       name: Get old version
  #       run: |
  #         version=$(<version)
  #         echo "version=$version" >> $GITHUB_OUTPUT
  #       working-directory: bitergia-analytics-opensearch-dashboards

  #     - id: semverup
  #       name: Get version number
  #       continue-on-error: true
  #       shell: bash {0}
  #       run: |
  #         if [ ${{ inputs.release_candidate }} == 'true' ]
  #         then
  #           rcArg='--pre-release'
  #         else
  #           rcArg=''
  #         fi
  #         old_version=${{ steps.old-version.outputs.version }}

  #         version=$(semverup --dry-run --current-version $old_version $rcArg)
  #         if [ -z $version ] && [ ${{ inputs.release_candidate }} != 'true' ] && [[ "$old_version" =~ .*rc.* ]]
  #         then
  #           echo "Create final version from rc"
  #           version=$(semverup --bump-version patch)
  #           echo "forced_version=true" >> $GITHUB_OUTPUT
  #         else
  #           echo "forced_version=false" >> $GITHUB_OUTPUT
  #         fi
  #         echo $version
  #         echo "version=$version" >> $GITHUB_OUTPUT
  #         if [ -z $version ]; then exit 1; fi
  #       working-directory: bitergia-analytics-opensearch-dashboards

  #     - id: version
  #       name: Update version
  #       shell: bash
  #       run: |
  #         new_version=${{ steps.semverup.outputs.version }}
  #         echo $new_version > version
  #       working-directory: bitergia-analytics-opensearch-dashboards
      
  #     - name: Update plugin URL in Dockerfile
  #       id: dockerfile
  #       shell: bash
  #       run: |
  #         url='${{ needs.bitergia-analytics-plugin.outputs.plugin_url }}'
  #         line="RUN opensearch-dashboards-plugin install $url"
  #         sed -i "/bitergia-analytics-plugin/s|.*|$line|" Dockerfile
  #       working-directory: bitergia-analytics-opensearch-dashboards
      
  #     - id: notes
  #       name: Generate release notes.
  #       if: steps.semverup.outcome == 'success'
  #       run: |
  #         version=${{ steps.semverup.outputs.version }}
  #         eof="EOF$(date +%s)"
  #         release_file="releases/$version.md"
  #         if [ ${{ inputs.release_candidate }} == 'true' ]
  #         then
  #           newsArg=''
  #           rcArg='--pre-release'
  #         else
  #           newsArg='--news'
  #           rcArg=''
  #         fi

  #         if [ ${{ steps.semverup.outputs.forced_version }} != 'true' ]
  #         then
  #           notes "Bitergia Analytics OpenSearch Dashboards" $version $newsArg --authors $rcArg
  #         else
  #           today=$(date -u "+%Y-%m-%d")
  #           cat << EOF > $release_file
  #           ## Bitergia Analytics OpenSearch Dashboards $version - ($today)
  #         EOF
  #           # Update NEWS file if it is not a release candidate
  #           if [ ${{ inputs.release_candidate }} != 'true' ]
  #           then
  #             mv NEWS old_NEWS
  #             echo -e "# Releases\n" >> NEWS
  #             cat $release_file >> NEWS
  #             cat old_NEWS | tail -n +2 >> NEWS
  #           fi
  #         fi

  #         # Save release notes in 'notes' output
  #         echo 'notes<<$eof' >> $GITHUB_OUTPUT
  #         cat $release_file >> $GITHUB_OUTPUT
  #         echo '$eof' >> $GITHUB_OUTPUT
  #       working-directory: bitergia-analytics-opensearch-dashboards
      
  #     - id: current_time
  #       name: Store current time to get the release workflow
  #       if: steps.semverup.outcome == 'success'
  #       run: |
  #         datetime=$(date +"%Y-%m-%dT%H:%M:%S%z")
  #         echo "datetime=$datetime" >> $GITHUB_OUTPUT
  #         echo $datetime

  #     - id: publish
  #       name: Publish new version
  #       if: steps.semverup.outcome == 'success'
  #       run: |
  #         git config user.name ${{ inputs.git_name }}
  #         git config user.email ${{ inputs.git_email }}
  #         git add .
  #         git commit -m "Release ${{ steps.semverup.outputs.version }}"
  #         git push
  #         git tag ${{ steps.semverup.outputs.version }}
  #         git push origin ${{ steps.semverup.outputs.version }}
  #       working-directory: bitergia-analytics-opensearch-dashboards
      
  #     - id: wait-for-release
  #       name: Wait for release to finish.
  #       continue-on-error: true
  #       if: steps.publish.outcome == 'success'
  #       run: |
  #         url="https://api.github.com/repos/evamillan/test-gh-actions/actions/workflows/release.yml/runs?created=>${{ steps.current_time.outputs.datetime }}"
  #         while true
  #         do
  #           workflows=$(curl -sS -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" $url)
  #           if [ $(echo $workflows | jq '.total_count') -eq 0 ]
  #           then
  #             echo "Release workflow did not start"
  #             sleep 60
  #             continue
  #           fi

  #           release_conclusion=$(echo $workflows | jq '.workflow_runs[0].conclusion')
  #           release_status=$(echo $workflows | jq '.workflow_runs[0].status')
  #           if [ $release_status = \"completed\" -a $release_conclusion = \"success\" ]
  #           then
  #             echo "Release completed!";
  #             break;
  #           elif [ $release_status = \"completed\" -a $release_conclusion != \"success\" ]
  #           then
  #             echo "Release failed!";
  #             exit 1;
  #           else
  #             echo $release_conclusion $release_status
  #             echo "Waiting for release..."
  #             sleep 60
  #           fi
  #         done

  #     - id: rollback
  #       name: Rollback last commits and remove tag
  #       if: steps.wait-for-release.outcome == 'failure'
  #       run: |
  #         git reset --hard HEAD~1
  #         git push -f origin master
  #         git tag -d ${{ steps.semverup.outputs.version }}
  #         git push --delete origin ${{ steps.semverup.outputs.version }}

  #         # Force to fail
  #         exit 1
  #       working-directory: bitergia-analytics-opensearch-dashboards
